{"mappings":"ACAA,SAAS,gBAAA,CAAiB,mBAAoB,WAC5C,gBAAgB;AAChB,IAAM,EAAW,IAAI,KAAK,gBAEtB,EAAU,IACd,0BAAyB;AACzB,SAAS,EAAc,CAAG,CAAE,CAAK,EAC/B,OAAO,CAAK,CACV,EAAM,IAAM,GAAK,EAAM,IAAM,GACzB,EACA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAE,CAAC,EAAM,GAAK,EAAI,EAAM,GAAK,EAAE,CACpD,AACH,CACA,4FAA4F;AAC5F,SAAS,IACP,IAAM,EAAO,EAAW,IAAI,KACxB,GAAQ,GACV,cAAc,GAEhB,IAAM,EAAO,EAAO,EAAI,KAAK,KAAA,CAAM,EAAO,IAAO,GAAK,GAAK,IAAM,EAC3D,EAAQ,EAAO,EAAI,KAAK,KAAA,CAAM,EAAO,IAAO,GAAK,IAAM,GAAK,EAC5D,EAAU,EAAO,EAAI,KAAK,KAAA,CAAM,EAAO,IAAO,IAAM,GAAK,EACzD,EAAU,EAAO,EAAI,KAAK,KAAA,CAAM,EAAO,KAAQ,GAAK,CAC1D,CAAA,EAAM,WAAA,CAAc,EAAO,GAAK,IAAM,EAAO,EAC7C,EAAO,WAAA,CAAc,EAAQ,GAAK,IAAM,EAAQ,EAChD,EAAS,WAAA,CAAc,EAAU,GAAK,IAAM,EAAU,EACtD,EAAS,WAAA,CAAc,EAAU,GAAK,IAAM,EAAU,EACtD,EAAM,OAAA,CAAQ,KAAA,CAAQ,EAAc,EAAM,CAAC,OAAQ,MAAO,OAAO,EACjE,EAAO,OAAA,CAAQ,KAAA,CAAQ,EAAc,EAAO,CAAC,MAAO,OAAQ,QAAQ,EACpE,EAAS,OAAA,CAAQ,KAAA,CAAQ,EAAc,EAAS,CAC9C,SACA,SACA,QACD,EACD,EAAS,OAAA,CAAQ,KAAA,CAAQ,EAAc,EAAS,CAC9C,UACA,UACA,SACD,CACH,CACA,gDAAgD;AAChD,IAAM,EAAQ,SAAS,aAAA,CAAc,gBAC/B,EAAS,SAAS,aAAA,CAAc,iBAChC,EAAW,SAAS,aAAA,CAAc,mBAClC,EAAW,SAAS,aAAA,CAAc,mBACxC,kCAAkC;AAClC,IACA,iDAAiD;AACjD,EAAU,YAAY,EAAgB,IACxC,E,4D","sources":["<anon>","src/js/timer.js"],"sourcesContent":["(function () {\nvar $67b5ad8caac4e087$exports = {};\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    // конечная дата\n    const deadline = new Date(\"2023, 09, 25\");\n    // id таймера\n    let timerId = null;\n    // склонение числительных\n    function declensionNum(num, words) {\n        return words[num % 100 > 4 && num % 100 < 20 ? 2 : [\n            2,\n            0,\n            1,\n            1,\n            1,\n            2\n        ][num % 10 < 5 ? num % 10 : 5]];\n    }\n    // вычисляем разницу дат и устанавливаем оставшееся времени в качестве содержимого элементов\n    function countdownTimer() {\n        const diff = deadline - new Date();\n        if (diff <= 0) clearInterval(timerId);\n        const days = diff > 0 ? Math.floor(diff / 1000 / 60 / 60 / 24) : 0;\n        const hours = diff > 0 ? Math.floor(diff / 1000 / 60 / 60) % 24 : 0;\n        const minutes = diff > 0 ? Math.floor(diff / 1000 / 60) % 60 : 0;\n        const seconds = diff > 0 ? Math.floor(diff / 1000) % 60 : 0;\n        $days.textContent = days < 10 ? \"0\" + days : days;\n        $hours.textContent = hours < 10 ? \"0\" + hours : hours;\n        $minutes.textContent = minutes < 10 ? \"0\" + minutes : minutes;\n        $seconds.textContent = seconds < 10 ? \"0\" + seconds : seconds;\n        $days.dataset.title = declensionNum(days, [\n            \"день\",\n            \"дня\",\n            \"дней\"\n        ]);\n        $hours.dataset.title = declensionNum(hours, [\n            \"час\",\n            \"часа\",\n            \"часов\"\n        ]);\n        $minutes.dataset.title = declensionNum(minutes, [\n            \"минута\",\n            \"минуты\",\n            \"минут\"\n        ]);\n        $seconds.dataset.title = declensionNum(seconds, [\n            \"секунда\",\n            \"секунды\",\n            \"секунд\"\n        ]);\n    }\n    // получаем элементы, содержащие компоненты даты\n    const $days = document.querySelector(\".timer__days\");\n    const $hours = document.querySelector(\".timer__hours\");\n    const $minutes = document.querySelector(\".timer__minutes\");\n    const $seconds = document.querySelector(\".timer__seconds\");\n    // вызываем функцию countdownTimer\n    countdownTimer();\n    // вызываем функцию countdownTimer каждую секунду\n    timerId = setInterval(countdownTimer, 1000);\n});\n\n})();\n//# sourceMappingURL=index.715ef534.js.map\n","document.addEventListener('DOMContentLoaded', function () {\n  // конечная дата\n  const deadline = new Date('2023, 09, 25');\n  // id таймера\n  let timerId = null;\n  // склонение числительных\n  function declensionNum(num, words) {\n    return words[\n      num % 100 > 4 && num % 100 < 20\n        ? 2\n        : [2, 0, 1, 1, 1, 2][num % 10 < 5 ? num % 10 : 5]\n    ];\n  }\n  // вычисляем разницу дат и устанавливаем оставшееся времени в качестве содержимого элементов\n  function countdownTimer() {\n    const diff = deadline - new Date();\n    if (diff <= 0) {\n      clearInterval(timerId);\n    }\n    const days = diff > 0 ? Math.floor(diff / 1000 / 60 / 60 / 24) : 0;\n    const hours = diff > 0 ? Math.floor(diff / 1000 / 60 / 60) % 24 : 0;\n    const minutes = diff > 0 ? Math.floor(diff / 1000 / 60) % 60 : 0;\n    const seconds = diff > 0 ? Math.floor(diff / 1000) % 60 : 0;\n    $days.textContent = days < 10 ? '0' + days : days;\n    $hours.textContent = hours < 10 ? '0' + hours : hours;\n    $minutes.textContent = minutes < 10 ? '0' + minutes : minutes;\n    $seconds.textContent = seconds < 10 ? '0' + seconds : seconds;\n    $days.dataset.title = declensionNum(days, ['день', 'дня', 'дней']);\n    $hours.dataset.title = declensionNum(hours, ['час', 'часа', 'часов']);\n    $minutes.dataset.title = declensionNum(minutes, [\n      'минута',\n      'минуты',\n      'минут',\n    ]);\n    $seconds.dataset.title = declensionNum(seconds, [\n      'секунда',\n      'секунды',\n      'секунд',\n    ]);\n  }\n  // получаем элементы, содержащие компоненты даты\n  const $days = document.querySelector('.timer__days');\n  const $hours = document.querySelector('.timer__hours');\n  const $minutes = document.querySelector('.timer__minutes');\n  const $seconds = document.querySelector('.timer__seconds');\n  // вызываем функцию countdownTimer\n  countdownTimer();\n  // вызываем функцию countdownTimer каждую секунду\n  timerId = setInterval(countdownTimer, 1000);\n});\n"],"names":["document","addEventListener","deadline","Date","timerId","declensionNum","num","words","countdownTimer","diff","clearInterval","days","Math","floor","hours","minutes","seconds","$days","textContent","$hours","$minutes","$seconds","dataset","title","querySelector","setInterval"],"version":3,"file":"index.715ef534.js.map"}
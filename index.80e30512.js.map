{"mappings":"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","sources":["node_modules/dotenv/lib/main.js","node_modules/process/browser.js","node_modules/path-browserify/index.js","src/js/tg.js"],"sourcesContent":["/* @flow */\n/*::\n\ntype DotenvParseOptions = {\n  debug?: boolean\n}\n\n// keys and values from src\ntype DotenvParseOutput = { [string]: string }\n\ntype DotenvConfigOptions = {\n  path?: string, // path to .env file\n  encoding?: string, // encoding of .env file\n  debug?: string // turn on logging for debugging purposes\n}\n\ntype DotenvConfigOutput = {\n  parsed?: DotenvParseOutput,\n  error?: Error\n}\n\n*/\n\nconst fs = require('fs')\nconst path = require('path')\n\nfunction log (message /*: string */) {\n  console.log(`[dotenv][DEBUG] ${message}`)\n}\n\nconst NEWLINE = '\\n'\nconst RE_INI_KEY_VAL = /^\\s*([\\w.-]+)\\s*=\\s*(.*)?\\s*$/\nconst RE_NEWLINES = /\\\\n/g\n\n// Parses src into an Object\nfunction parse (src /*: string | Buffer */, options /*: ?DotenvParseOptions */) /*: DotenvParseOutput */ {\n  const debug = Boolean(options && options.debug)\n  const obj = {}\n\n  // convert Buffers before splitting into lines and processing\n  src.toString().split(NEWLINE).forEach(function (line, idx) {\n    // matching \"KEY' and 'VAL' in 'KEY=VAL'\n    const keyValueArr = line.match(RE_INI_KEY_VAL)\n    // matched?\n    if (keyValueArr != null) {\n      const key = keyValueArr[1]\n      // default undefined or missing values to empty string\n      let val = (keyValueArr[2] || '')\n      const end = val.length - 1\n      const isDoubleQuoted = val[0] === '\"' && val[end] === '\"'\n      const isSingleQuoted = val[0] === \"'\" && val[end] === \"'\"\n\n      // if single or double quoted, remove quotes\n      if (isSingleQuoted || isDoubleQuoted) {\n        val = val.substring(1, end)\n\n        // if double quoted, expand newlines\n        if (isDoubleQuoted) {\n          val = val.replace(RE_NEWLINES, NEWLINE)\n        }\n      } else {\n        // remove surrounding whitespace\n        val = val.trim()\n      }\n\n      obj[key] = val\n    } else if (debug) {\n      log(`did not match key and value when parsing line ${idx + 1}: ${line}`)\n    }\n  })\n\n  return obj\n}\n\n// Populates process.env from .env file\nfunction config (options /*: ?DotenvConfigOptions */) /*: DotenvConfigOutput */ {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding /*: string */ = 'utf8'\n  let debug = false\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = options.path\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n    if (options.debug != null) {\n      debug = true\n    }\n  }\n\n  try {\n    // specifying an encoding returns a string instead of a buffer\n    const parsed = parse(fs.readFileSync(dotenvPath, { encoding }), { debug })\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!process.env.hasOwnProperty(key)) {\n        process.env[key] = parsed[key]\n      } else if (debug) {\n        log(`\"${key}\" is already defined in \\`process.env\\` and will not be overwritten`)\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    return { error: e }\n  }\n}\n\nmodule.exports.config = config\nmodule.exports.parse = parse\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","const TOKEN = process.env.TOKEN;\nconst CHAT_ID = process.env.CHAT_ID;\nconst URL_API = `https://api.telegram.org/bot${TOKEN}/sendMessage`;\nconst success = document.getElementById('success');\nrequire('dotenv').config();\n\ndocument.getElementById('tg').addEventListener('submit', function (e) {\n  e.preventDefault();\n\n  let message = `<b>Заявка с сайта!</b>\\n`;\n  message += `<b>Отправитель: </b> ${this.name.value}\\n`;\n  message += `<b>Телефон: </b> ${this.tel.value}\\n`;\n  message += `<b>Имя пользователя: </b> ${this.comment.value}`;\n\n  axios\n    .post(URL_API, {\n      chat_id: CHAT_ID,\n      parse_mode: 'html',\n      text: message,\n    })\n    .then(res => {\n      this.name.value = '';\n      this.tel.value = '';\n      this.comment.value = '';\n      success.innerHTML = 'Сообщение отправлено!';\n      success.style.display = 'block';\n    })\n    .catch(err => {\n      console.warn(err);\n    })\n    .finally(() => {\n      console.log('Отправили!');\n    });\n});\n"],"names":["$d6fd97a8f77c3245$export$e506a1d27d1eaa20","$d6fd97a8f77c3245$var$log","message","console","log","$d6fd97a8f77c3245$var$RE_INI_KEY_VAL","$d6fd97a8f77c3245$var$RE_NEWLINES","$d6fd97a8f77c3245$var$parse","src","options","debug","Boolean","obj","toString","split","forEach","line","idx","keyValueArr","match","key","val","end","length","isDoubleQuoted","substring","replace","trim","dotenvPath","$1SgHS","resolve","$4TNnu","cwd","encoding","path","parsed","$5Io6y","readFileSync","Object","keys","env","hasOwnProperty","e","error","$391299e0893a3dfa$var$cachedSetTimeout","$391299e0893a3dfa$var$cachedClearTimeout","$391299e0893a3dfa$var$process","module","exports","$391299e0893a3dfa$var$defaultSetTimout","Error","$391299e0893a3dfa$var$defaultClearTimeout","$391299e0893a3dfa$var$runTimeout","fun","setTimeout","call","this","clearTimeout","e1","$391299e0893a3dfa$var$currentQueue","$391299e0893a3dfa$var$queue","$391299e0893a3dfa$var$draining","$391299e0893a3dfa$var$queueIndex","$391299e0893a3dfa$var$cleanUpNextTick","concat","$391299e0893a3dfa$var$drainQueue","timeout","len","run","marker","$391299e0893a3dfa$var$runClearTimeout","$391299e0893a3dfa$var$Item","array","$391299e0893a3dfa$var$noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","chdir","dir","umask","$15d7cb2fd1c4f3ba$var$assertPath","TypeError","JSON","stringify","$15d7cb2fd1c4f3ba$var$normalizeStringPosix","allowAboveRoot","code","res","lastSegmentLength","lastSlash","dots","charCodeAt","lastSlashIndex","lastIndexOf","slice","$15d7cb2fd1c4f3ba$var$posix","resolvedPath","resolvedAbsolute","undefined","normalize","isAbsolute","trailingSeparator","join","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","matchedSlash","basename","ext","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","sep","root","base","$15d7cb2fd1c4f3ba$var$_format","parse","ret","delimiter","win32","posix","$62ff8bf260a1d4d3$var$success","document","getElementById","parcelRequire","config","addEventListener","preventDefault","value","tel","comment","axios","post","chat_id","parse_mode","text","then","innerHTML","style","display","catch","err","warn","finally"],"version":3,"file":"index.80e30512.js.map"}